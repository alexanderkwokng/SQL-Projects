Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: "No"
	
	
	SQL code used to arrive at answer:

SELECT 
    COUNT(*)
FROM
    User
WHERE
    id IS NULL OR
    name IS NULL OR
    review_count IS NULL OR
    yelping_since IS NULL OR 
    useful IS NULL OR 
    funny IS NULL OR
    cool IS NULL OR
    fans IS NULL OR 
    average_stars IS NULL OR 
    compliment_hot IS NULL OR 
    compliment_more IS NULL OR
    compliment_profile IS NULL OR 
    compliment_cute IS NULL OR 
    compliment_list IS NULL OR 
    compliment_note IS NULL OR 
    compliment_plain IS NULL OR 
    compliment_cool IS NULL OR 
    compliment_funny IS NULL OR 
    compliment_writer IS NULL OR 
    compliment_photos IS NULL
    
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1 		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT
    city,
    SUM(review_count) AS reviews
FROM
    business
GROUP BY
    city 
ORDER BY
    reviews DESC	
	
	
	Copy and Paste the Result Below:
	
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
    stars,
    SUM(review_count) AS ReviewCount
FROM
    business
WHERE
    city = 'Avon'
GROUP BY
    stars 


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------------+
| stars | ReviewCount |
+-------+-------------+
|   1.5 |          10 |
|   2.5 |           6 |
|   3.5 |          88 |
|   4.0 |          21 |
|   4.5 |          31 |
|   5.0 |           3 |
+-------+-------------+


ii. Beachwood

SQL code used to arrive at answer:

SELECT
    stars,
    SUM(review_count) AS ReviewCount
FROM
    business
WHERE
    city = 'Beachwood'
GROUP BY
    stars 


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+-------------+
| stars | ReviewCount |
+-------+-------------+
|   2.0 |           8 |
|   2.5 |           3 |
|   3.0 |          11 |
|   3.5 |           6 |
|   4.0 |          69 |
|   4.5 |          17 |
|   5.0 |          23 |
+-------+-------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT
    id,
    name,
    review_count
FROM
    user
ORDER BY
    review_count DESC
LIMIT 3
		
	Copy and Paste the Result Below:

+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Yes, there is a positive correlation between posting more reviews and number of fans. An yelper with greater review_count tend to have more fans than a yelper with no review_count. 

SELECT
    id,
    name,
    review_count,
    fans
FROM
    user
ORDER BY review_count DESC

+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -AaBjWJYiQxXkCMDlXfPGw | Tim       |          702 |   35 |
| -jt1ACMiZljnBFvS6RRvnA | L         |          696 |   10 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -hxUwfo3cMnLTv-CAaP69A | Crissy    |          676 |   25 |
| -H6cTbVxeIRYR-atxdielQ | Lyn       |          675 |   45 |
+------------------------+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

	There are 1780 reviews with the word "love"
	There are 232 reviews with the word "hate"
	
	SQL code used to arrive at answer

SELECT
    COUNT(id)
FROM
    review
WHERE
    text LIKE '%love%'

 SELECT
    COUNT(id)
FROM
    review
WHERE
    text LIKE '%hate%'
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT
    id,
    name,
    fans
FROM
    user
ORDER BY
    fans DESC
LIMIT 10
	
	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

City = "Las Vegas"
Category = "shopping"
	
i. Do the two groups you chose to analyze have a different distribution of hours?

4-5 stars group are opened mostly from 8:00-17:00
2-3 star group are opened mostly from 8:00-22:00
4-5 star groups are opened overall less hours compared to 2-3 star groups. 

SELECT
    CASE
        WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
        WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
    END AS star_rating,
    h.hours AS hours
FROM
    business AS b 
LEFT JOIN
    category AS c 
ON
    b.id = c.business_id
LEFT JOIN
    hours AS h 
ON
    h.business_id = b.id 
WHERE
    c.category = "Shopping"
    AND b.city = "Las Vegas"
    AND star_rating != "None"
GROUP BY
    star_rating, hours
ORDER BY
    stars DESC

+-------------+----------------------+
| star_rating | hours                |
+-------------+----------------------+
| 4-5 stars   | Friday|8:00-17:00    |
| 4-5 stars   | Monday|8:00-17:00    |
| 4-5 stars   | Thursday|8:00-17:00  |
| 4-5 stars   | Tuesday|8:00-17:00   |
| 4-5 stars   | Wednesday|8:00-17:00 |
| 4-5 stars   | Friday|8:00-16:30    |
| 4-5 stars   | Monday|8:00-16:30    |
| 4-5 stars   | Saturday|8:00-16:30  |
| 4-5 stars   | Sunday|8:00-16:30    |
| 4-5 stars   | Thursday|8:00-16:30  |
| 4-5 stars   | Tuesday|8:00-16:30   |
| 4-5 stars   | Wednesday|8:00-16:30 |
| 2-3 stars   | Friday|8:00-22:00    |
| 2-3 stars   | Monday|8:00-22:00    |
| 2-3 stars   | Saturday|8:00-22:00  |
| 2-3 stars   | Sunday|8:00-22:00    |
| 2-3 stars   | Thursday|8:00-22:00  |
| 2-3 stars   | Tuesday|8:00-22:00   |
| 2-3 stars   | Wednesday|8:00-22:00 |
+-------------+----------------------+


ii. Do the two groups you chose to analyze have a different number of reviews?

Group with 4-5 stars have more reviews compared to group with 2-3 stars

SELECT
    CASE
        WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
        WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
    END AS star_rating,
    sum(b.review_count) AS total_reviews
FROM
    business AS b 
LEFT JOIN
    category AS c 
ON
    b.id = c.business_id
LEFT JOIN
    hours AS h 
ON
    h.business_id = b.id 
WHERE
    c.category = "Shopping"
    AND b.city = "Las Vegas"
GROUP BY
    star_rating
ORDER BY
    star_rating DESC

+-------------+---------------+
| star_rating | total_reviews |
+-------------+---------------+
| 4-5 stars   |           244 |
| 2-3 stars   |            42 |
| None        |            66 |
+-------------+---------------+
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

I can infer that 4-5 stars gnerally have more reviews and those groups are located in postal codes 89118 and 89161.
2-3 stars generally have less reviews and are located in postal code 89121

SQL code used for analysis:

SELECT
    CASE
        WHEN stars BETWEEN 2 AND 3 THEN '2-3 stars'
        WHEN stars BETWEEN 4 AND 5 THEN '4-5 stars'
    END AS star_rating,
    sum(b.review_count) AS total_reviews,
    b.postal_code
FROM
    business AS b 
LEFT JOIN
    category AS c 
ON
    b.id = c.business_id
LEFT JOIN
    hours AS h 
ON
    h.business_id = b.id 
WHERE
    c.category = "Shopping"
    AND b.city = "Las Vegas"
GROUP BY
    star_rating, postal_code
ORDER BY
    star_rating DESC

+-------------+---------------+-------------+
| star_rating | total_reviews | postal_code |
+-------------+---------------+-------------+
| 4-5 stars   |            20 | 89118       |
| 4-5 stars   |           224 | 89161       |
| 2-3 stars   |            42 | 89121       |
| None        |            66 | 89121       |
+-------------+---------------+-------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

Businesses that are opened have greater average reviews than businesses that are closed (31.75 vs 23.19)
         
         
ii. Difference 2:
         
 Bsuinesses that are opened have greater average rating than businesses that are closed (3.67 vs 3.52)        
         
SQL code used for analysis:

SELECT 
    COUNT(DISTINCT(id)) AS TotalBusiness,
            AVG(review_count) AS AverageReview,
            SUM(review_count) AS TotalReview,
            AVG(stars) AS AverageRating,
            is_open
FROM 
    business
GROUP BY 
    is_open	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Explortory data analysis on yelp users
A) What are the differences between Elite and Non-elite yelpers and their reviewing/rating behaviours? 
	i)What is the average rating given by yelp users? how about elite users?
	ii)what is the average review count of reviews given by non-elite yelp users? how about elite yelp users?


         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

I wanted to do research on Yelp users groups and identify their reviewing/rating behaviour. The first curiousities I have was learning the reviewing
and rating behavious between the non-Elite and Elite Group. Prior knowledge would suggest that non-Elite Yelpers are less critical of their reviews
and generally have lower review counts. Whereas an Elite yelper would be more critical of the businesses they review and have to review greater volumes of businesses in order to achieve the Elite status. We already have data on review counts and rating which can be found in the User table. We 
have a way of differentiating between non-Elite Yelpers and Elite yelpers using the elite_years Table, year column. If the year column is not Null, then it indicates that record is associated with a Elite yelper, and vice versa. Running some EDA, I was able to confirm that Elite Yelpers gave an average rating that is lower than non-elite Yelpers (3.47 vs 3.69). I also learned that the Elite Yelpers gave an average review count of 425 and non-elite Yelpers gave an average review count of 23.72.


                  
iii. Output of your finished dataset:

Average Stars for Non-Elite Yelpers
+----------------------+
| AVG(u.average_stars) |
+----------------------+
|        3.69980058122 |
+----------------------+

Average Stars for Elite Yelpers
+----------------------+
| AVG(u.average_stars) |
+----------------------+
|        3.47870588235 |
+----------------------+

Average number of Reviews by Non-Elite Yelpers
+---------------------+
| AVG(u.review_count) |
+---------------------+
|       23.7260246518 |
+---------------------+

Average number of Reviews by Elite Yelpers
+---------------------+
| AVG(u.review_count) |
+---------------------+
|       424.964705882 |
+---------------------+


         
         
iv. Provide the SQL code you used to create your final dataset:

Explortory data analysis on yelp users
A) What are the differences between Elite and Non-elite yelpers and their reviewing/rating behaviours? 
	i)What is the average rating given by yelp users? how about elite users?

Non-Elite users give an average rating of 3.69

Code: 

SELECT
    AVG(u.average_stars)
FROM
    user AS u
LEFT JOIN
    elite_years AS ey 
ON 
    u.id = ey.user_id 
WHERE
    ey.year IS NULL 

Elite Users give an average rating of 3.47

Code:

SELECT
    AVG(u.average_stars)
FROM
    user AS u
LEFT JOIN
    elite_years AS ey 
ON 
    u.id = ey.user_id 
WHERE
    ey.year IS NOT NULL 
ORDER BY
    ey.year ASC

	II)what is the average review count of reviews given by non-elite yelp users? how about elite yelp users?

Non-elite users give an average of 23.72 reviews on the Yelp platform

Code:
SELECT
    AVG(u.review_count)
FROM
    user AS u 
LEFT JOIN
    elite_years AS ey 
ON
    u.id = ey.user_id 
WHERE
    ey.year IS NULL 

 Elite-Users give an average of 424.96 reviews on the Yelp platform

 Code:

SELECT
    AVG(u.review_count)
FROM
    user AS u 
LEFT JOIN
    elite_years AS ey 
ON
    u.id = ey.user_id 
WHERE
    ey.year IS NOT NULL 
